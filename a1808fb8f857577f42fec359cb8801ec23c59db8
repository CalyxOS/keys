{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3c02ce99_72a64888",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000062
      },
      "writtenOn": "2024-03-06T23:40:54Z",
      "side": 1,
      "message": "aml build script expects to be able to find it in shared/, doesn\u0027t care about anywhere else but I was trying to copy the structure",
      "revId": "a1808fb8f857577f42fec359cb8801ec23c59db8",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cb738d12_bcef79dc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-03-07T13:11:28Z",
      "side": 1,
      "message": "Is this for qpr2/mar24 or aml?\n\nThis should always match prod setup, and thus keep in sync with vendor/calyx.\n\nI\u0027m not sure what kind of out of band signing we\u0027ll be doing for Connectivity just yet.",
      "revId": "a1808fb8f857577f42fec359cb8801ec23c59db8",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97a0e1f5_9e7842e9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000062
      },
      "writtenOn": "2024-03-07T13:42:50Z",
      "side": 1,
      "message": "It\u0027s for aml.\n\nI see now in metadata we have releasekey for container, com.android.tethering for payload...\n\n[apex.bzl](https://cs.android.com/android/platform/superproject/main/+/d48f0b6499f5952fad13260838b0a49ee7b88f1e:build/bazel/rules/apex/apex.bzl;l\u003d852) signs uncompressed and compressed with the same key, but now I think I realize there are three signing occurrences: payload, container, compressed container. Container and compressed container should be the same, which means they should be releasekey.\n\naml build script will need to get this info from somewhere. I guess I should see about having it use the metadata file?",
      "parentUuid": "cb738d12_bcef79dc",
      "revId": "a1808fb8f857577f42fec359cb8801ec23c59db8",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0fae469_2d74ec97",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-03-07T13:52:09Z",
      "side": 1,
      "message": "yes, can have it use the existing metadata file, and feel free to duplicate it in some other location for now if that\u0027s easier (with a comment in both files mentioning the other copy)",
      "parentUuid": "97a0e1f5_9e7842e9",
      "revId": "a1808fb8f857577f42fec359cb8801ec23c59db8",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3f1e8e02_158c7174",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000062
      },
      "writtenOn": "2024-03-07T21:03:55Z",
      "side": 1,
      "message": "Okay great, done in latest build script.",
      "parentUuid": "c0fae469_2d74ec97",
      "revId": "a1808fb8f857577f42fec359cb8801ec23c59db8",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Builds",
        "description": {
          "value": "Make sure it builds. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Builds\u003dMAX AND -label:Builds\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Builds\u003d0 AND (label:Works\u003dMAX OR label:Bypass-Verification\u003dMAX)"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Builds=MAX AND -label:Builds=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Builds=MAX","label:Builds=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Builds=0 AND (label:Works=MAX OR label:Bypass-Verification=MAX)"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["label:Builds=0"],"failingAtoms":["label:Works=MAX","label:Bypass-Verification=MAX"]}
      },
      "patchSetCommitId": "a1808fb8f857577f42fec359cb8801ec23c59db8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum vote is required for the \u0027Code-Review\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "a1808fb8f857577f42fec359cb8801ec23c59db8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Works",
        "description": {
          "value": "Make sure it works. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Works\u003dMAX AND -label:Works\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Works\u003d0 AND label:Bypass-Verification\u003dMAX"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Works=MAX AND -label:Works=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Works=MAX","label:Works=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Works=0 AND label:Bypass-Verification=MAX"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["label:Works=0"],"failingAtoms":["label:Bypass-Verification=MAX"]}
      },
      "patchSetCommitId": "a1808fb8f857577f42fec359cb8801ec23c59db8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}